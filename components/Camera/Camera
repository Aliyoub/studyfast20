import { useState, useRef, useEffect } from "react";

const Camera = () => {
//   const videoRef = useRef(null);
//   const canvasRef = useRef(null);
//   const [isCameraOn, setIsCameraOn] = useState(false);
//   const [imageSrc, setImageSrc] = useState("");


  const videoRef = useRef<HTMLVideoElement | null>(null); // Explicitly define the ref type
  const canvasRef = useRef<HTMLCanvasElement | null>(null);
  const [isCameraOn, setIsCameraOn] = useState(false);
  const [imageSrc, setImageSrc] = useState('');

  useEffect(() => {
    if (isCameraOn) {
      const startCamera = async () => {
        try {
          const stream = await navigator.mediaDevices.getUserMedia({
            video: true,
          });
          if (videoRef.current) {
            videoRef.current.srcObject = stream;
          }
        } catch (err) {
          console.error("Error accessing camera:", err);
        }
      };
      startCamera();
    }
  }, [isCameraOn]);

  const captureImage = () => {
      const canvas = canvasRef?.current;
      const context = canvas?.getContext("2d");
    if (canvas && context) { 
    context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);
    const imageData = canvas.toDataURL("image/png");
    setImageSrc(imageData);
    }
  };

  return (
    <div>
      <button onClick={() => setIsCameraOn(!isCameraOn)}>
        {isCameraOn ? "Turn Off Camera" : "Turn On Camera"}
      </button>
      {isCameraOn && (
        <div>
          <video
            ref={videoRef}
            autoPlay
            playsInline
            style={{
              width: "400px",
              height: "300px",
            //   border: "1px solid #EEE",
            //   margin: "10px",
            //   padding: "10px"
            }}
          />
          <button onClick={captureImage}>Capture Image</button>
          <canvas
            ref={canvasRef}
            style={{ display: "none" }}
            width="400"
            height="300"
          ></canvas>
        </div>
      )}
      {imageSrc && (
        <div>
          <h3>Captured Image:</h3>
          <img src={imageSrc} alt="Captured" />
        </div>
      )}
    </div>
  );
};

export default Camera;
